{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","components/Social/Social.jsx","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justifyContent","item","component","Card","xs","md","cn","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","type","height","width","url","fetchData","country","a","changAbleUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","Social","class","style","bgColor","App","state","fetchedData","setState","this","image","src","footer","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c641b84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__nCiUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3LgR2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__32AGz\",\"card\":\"Cards_card__PScpy\",\"infected\":\"Cards_infected__2yv5V\",\"recovered\":\"Cards_recovered__GLtmD\",\"deaths\":\"Cards_deaths__2ByUS\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cn from 'classnames';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return (\r\n      <ReactLoading type=\"spin\" color=\"#61DBFB\" height={'20%'} width={'20%'} />\r\n    );\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cn(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.75}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cn(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.75}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cn(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.75}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changAbleUrl = url;\r\n  if (country) {\r\n    changAbleUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changAbleUrl);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    // console.log(modifiedData);\r\n    return modifiedData;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api/index';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets: [\r\n          {\r\n            label: 'People',\r\n            backgroundColor: [\r\n              'rgba(0, 0, 255, 0.5)',\r\n              'rgba(0, 255, 0, 0.5)',\r\n              'rgba(255, 0, 0, 0.5)',\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state is ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api/index';\r\n\r\nfunction CountryPicker({ handleCountryChange }) {\r\n  const [fetchedCountries, setFetchCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [setFetchCountries]);\r\n\r\n  // console.log(fetchedCountries);\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\nexport default function Social() {\r\n  return (\r\n    <div class=\"social-container\">\r\n      <SocialIcon\r\n        url=\"https://www.linkedin.com/in/sakil-khan-076926145/\"\r\n        style={{ height: 40, width: 40 }}\r\n      />\r\n      <SocialIcon\r\n        url=\"https://github.com/sakilk130\"\r\n        style={{ height: 40, width: 40 }}\r\n        bgColor=\"black\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api/index';\r\nimport image from './images/image.png';\r\n\r\nimport Social from './components/Social/Social';\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  };\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={image} />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n        <h4>Created By Sakil Khan</h4>\r\n        <footer className={styles.footer}>\r\n          <Social />\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1Sc37\",\"image\":\"App_image__11hPz\",\"footer\":\"App_footer__HHxPG\"};"],"sourceRoot":""}